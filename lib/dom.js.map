{"version":3,"file":"dom.js","sourceRoot":"","sources":["../src/dom.ts"],"names":[],"mappings":";;;AAAA,aAAa;AACA,QAAA,YAAY,GAAG,4BAA4B,CAAA;AAC3C,QAAA,cAAc,GAAG,8BAA8B,CAAA;AAC/C,QAAA,cAAc,GAAG,8BAA8B,CAAA;AAE5D,MAAM;AACC,MAAM,SAAS,GAAG,CAAC,IAAU,EAAmB,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,YAAY,CAAA;AAAhF,QAAA,SAAS,aAAuE;AACtF,MAAM,UAAU,GAAG,CAAC,IAAU,EAAgB,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,SAAS,CAAA;AAA3E,QAAA,UAAU,cAAiE;AACjF,MAAM,aAAa,GAAG,CAAC,IAAU,EAAmB,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,YAAY,CAAA;AAApF,QAAA,aAAa,iBAAuE;AAEjG,MAAM;AACC,MAAM,YAAY,GAAG,CAAC,OAAgB,EAAyB,EAAE,CAAC,OAAO,CAAC,YAAY,KAAK,oBAAY,CAAA;AAAjG,QAAA,YAAY,gBAAqF;AACvG,MAAM,eAAe,GAAG,CAAC,OAAgB,EAA4B,EAAE,CAC7E,oBAAY,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,OAAO,KAAK,KAAK,CAAA;AADtC,QAAA,eAAe,mBACuB;AAC5C,MAAM,oBAAoB,GAAG,CAAC,OAAgB,EAAiC,EAAE,CACvF,oBAAY,CAAC,OAAO,CAAC,IAAI,QAAQ,IAAI,OAAO,IAAI,cAAc,IAAI,OAAO,CAAA;AAD7D,QAAA,oBAAoB,wBACyC;AACnE,MAAM,iBAAiB,GAAG,CAAC,OAAgB,EAA0B,EAAE,CAC7E,oBAAY,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,OAAO,KAAK,GAAG,CAAA;AADpC,QAAA,iBAAiB,qBACmB;AAC1C,MAAM,kBAAkB,GAAG,CAAC,OAAgB,EAA0B,EAAE,CAC9E,oBAAY,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,OAAO,KAAK,GAAG,CAAA;AADpC,QAAA,kBAAkB,sBACkB;AAC1C,MAAM,uBAAuB,GAAG,CAAC,OAAgB,EAAoC,EAAE,CAC7F,oBAAY,CAAC,OAAO,CAAC,IAAI,YAAY,IAAI,OAAO,CAAA;AADpC,QAAA,uBAAuB,2BACa;AAC1C,MAAM,iBAAiB,GAAG,CAAC,OAAgB,EAA8B,EAAE,CACjF,OAAO,CAAC,OAAO,KAAK,OAAO,IAAI,oBAAY,CAAC,OAAO,CAAC,CAAA;AADxC,QAAA,iBAAiB,qBACuB;AAC9C,MAAM,iBAAiB,GAAG,CAAC,OAAgB,EAA8B,EAAE,CACjF,OAAO,CAAC,OAAO,KAAK,OAAO,IAAI,oBAAY,CAAC,OAAO,CAAC,CAAA;AADxC,QAAA,iBAAiB,qBACuB;AAErD,OAAO;AACA,MAAM,aAAa,GAAG,CAAC,OAAgB,EAA0B,EAAE,CAAC,OAAO,CAAC,YAAY,KAAK,sBAAc,CAAA;AAArG,QAAA,aAAa,iBAAwF;AAC3G,MAAM,mBAAmB,GAAG,CAAC,OAAgB,EAAgC,EAAE,CACrF,OAAO,CAAC,OAAO,KAAK,GAAG,IAAI,qBAAa,CAAC,OAAO,CAAC,CAAA;AADrC,QAAA,mBAAmB,uBACkB;AAC3C,MAAM,kBAAkB,GAAG,CAAC,OAAgB,EAA+B,EAAE,CACnF,OAAO,CAAC,OAAO,KAAK,OAAO,IAAI,qBAAa,CAAC,OAAO,CAAC,CAAA;AADzC,QAAA,kBAAkB,sBACuB;AAC/C,MAAM,kBAAkB,GAAG,CAAC,OAAgB,EAA+B,EAAE,CACnF,OAAO,CAAC,OAAO,KAAK,KAAK,IAAI,qBAAa,CAAC,OAAO,CAAC,CAAA;AADvC,QAAA,kBAAkB,sBACqB;AAC7C,MAAM,kBAAkB,GAAG,CAAC,OAAgB,EAA+B,EAAE,CACnF,OAAO,CAAC,OAAO,KAAK,OAAO,IAAI,qBAAa,CAAC,OAAO,CAAC,CAAA;AADzC,QAAA,kBAAkB,sBACuB;AAC/C,MAAM,SAAS,GAAG,CAAC,OAAoB,EAA6D,EAAE,CAC5G,QAAQ,IAAI,OAAO,CAAA;AADP,QAAA,SAAS,aACF;AAEpB,QAAe,CAAC,CAAC,WAAW,CAAC,IAAU,EAAE,cAAuC,GAAG,EAAE,CAAC,IAAI;IACzF,MAAM,IAAI,CAAA;IACV,IAAI,WAAW,CAAC,IAAI,CAAC,EAAE;QACtB,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,UAAU,EAAE;YACxC,KAAK,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,CAAA;SAC7B;KACD;AACF,CAAC;AAPD,kCAOC","sourcesContent":["// Namespaces\nexport const svgNamespace = 'http://www.w3.org/2000/svg'\nexport const xlinkNamespace = 'http://www.w3.org/1999/xlink'\nexport const xhtmlNamespace = 'http://www.w3.org/1999/xhtml'\n\n// DOM\nexport const isElement = (node: Node): node is Element => node.nodeType === Node.ELEMENT_NODE\nexport const isTextNode = (node: Node): node is Text => node.nodeType === Node.TEXT_NODE\nexport const isCommentNode = (node: Node): node is Comment => node.nodeType === Node.COMMENT_NODE\n\n// SVG\nexport const isSVGElement = (element: Element): element is SVGElement => element.namespaceURI === svgNamespace\nexport const isSVGSVGElement = (element: Element): element is SVGSVGElement =>\n\tisSVGElement(element) && element.tagName === 'svg'\nexport const isSVGGraphicsElement = (element: Element): element is SVGGraphicsElement =>\n\tisSVGElement(element) && 'getCTM' in element && 'getScreenCTM' in element\nexport const isSVGGroupElement = (element: Element): element is SVGGElement =>\n\tisSVGElement(element) && element.tagName === 'g'\nexport const isSVGAnchorElement = (element: Element): element is SVGAElement =>\n\tisSVGElement(element) && element.tagName === 'a'\nexport const isSVGTextContentElement = (element: Element): element is SVGTextContentElement =>\n\tisSVGElement(element) && 'textLength' in element\nexport const isSVGImageElement = (element: Element): element is SVGImageElement =>\n\telement.tagName === 'image' && isSVGElement(element)\nexport const isSVGStyleElement = (element: Element): element is SVGStyleElement =>\n\telement.tagName === 'style' && isSVGElement(element)\n\n// HTML\nexport const isHTMLElement = (element: Element): element is HTMLElement => element.namespaceURI === xhtmlNamespace\nexport const isHTMLAnchorElement = (element: Element): element is HTMLAnchorElement =>\n\telement.tagName === 'A' && isHTMLElement(element)\nexport const isHTMLLabelElement = (element: Element): element is HTMLLabelElement =>\n\telement.tagName === 'LABEL' && isHTMLElement(element)\nexport const isHTMLImageElement = (element: Element): element is HTMLImageElement =>\n\telement.tagName === 'IMG' && isHTMLElement(element)\nexport const isHTMLInputElement = (element: Element): element is HTMLInputElement =>\n\telement.tagName === 'INPUT' && isHTMLElement(element)\nexport const hasLabels = (element: HTMLElement): element is HTMLElement & Pick<HTMLInputElement, 'labels'> =>\n\t'labels' in element\n\nexport function* traverseDOM(node: Node, shouldEnter: (node: Node) => boolean = () => true): Iterable<Node> {\n\tyield node\n\tif (shouldEnter(node)) {\n\t\tfor (const childNode of node.childNodes) {\n\t\t\tyield* traverseDOM(childNode)\n\t\t}\n\t}\n}\n"]}