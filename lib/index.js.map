{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { svgNamespace, xlinkNamespace } from './dom'\nimport { DomToSvgOptions, walkNode } from './traversal'\nimport { createStackingLayers } from './stacking'\nimport { createIdGenerator } from './util'\nimport { isCSSFontFaceRule, unescapeStringValue } from './css'\nimport cssValueParser from 'postcss-value-parser'\n\nexport { DomToSvgOptions }\n\nexport function documentToSVG(document: Document, options?: DomToSvgOptions): XMLDocument {\n\treturn elementToSVG(document.documentElement, options)\n}\n\nexport function elementToSVG(element: Element, options?: DomToSvgOptions): XMLDocument {\n\tconst svgDocument = element.ownerDocument.implementation.createDocument(svgNamespace, 'svg', null) as XMLDocument\n\n\tconst svgElement = (svgDocument.documentElement as unknown) as SVGSVGElement\n\tsvgElement.setAttribute('xmlns', svgNamespace)\n\tsvgElement.setAttribute('xmlns:xlink', xlinkNamespace)\n\tsvgElement.append(\n\t\tsvgDocument.createComment(\n\t\t\t// \"--\" is invalid in comments, percent-encode.\n\t\t\t` Generated by dom-to-svg from ${element.ownerDocument.location.href.replace(/--/g, '%2D%2D')} `\n\t\t)\n\t)\n\n\t// Copy @font-face rules\n\tconst styleElement = svgDocument.createElementNS(svgNamespace, 'style')\n\tfor (const styleSheet of element.ownerDocument.styleSheets) {\n\t\tlet rules: CSSRuleList | undefined\n\t\ttry {\n\t\t\trules = styleSheet.rules\n\t\t} catch (error) {\n\t\t\tconsole.error('Could not access rules of styleSheet', styleSheet, error)\n\t\t}\n\t\t// Make font URLs absolute (need to be resolved relative to the stylesheet)\n\t\tfor (const rule of rules ?? []) {\n\t\t\tif (!isCSSFontFaceRule(rule)) {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tconst styleSheetHref = rule.parentStyleSheet?.href\n\t\t\tif (styleSheetHref) {\n\t\t\t\tconst parsedSourceValue = cssValueParser(rule.style.src)\n\t\t\t\tparsedSourceValue.walk(node => {\n\t\t\t\t\tif (node.type === 'function' && node.value === 'url' && node.nodes[0]) {\n\t\t\t\t\t\tconst urlArgumentNode = node.nodes[0]\n\t\t\t\t\t\tif (urlArgumentNode.type === 'string' || urlArgumentNode.type === 'word') {\n\t\t\t\t\t\t\turlArgumentNode.value = new URL(\n\t\t\t\t\t\t\t\tunescapeStringValue(urlArgumentNode.value),\n\t\t\t\t\t\t\t\tstyleSheetHref\n\t\t\t\t\t\t\t).href\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\trule.style.src = cssValueParser.stringify(parsedSourceValue.nodes)\n\t\t\t}\n\t\t\tstyleElement.append(rule.cssText, '\\n')\n\t\t}\n\t}\n\tsvgElement.append(styleElement)\n\n\twalkNode(element, {\n\t\tsvgDocument,\n\t\tcurrentSvgParent: svgElement,\n\t\tstackingLayers: createStackingLayers(svgElement),\n\t\tparentStackingLayer: svgElement,\n\t\tgetUniqueId: createIdGenerator(),\n\t\tlabels: new Map<HTMLLabelElement, string>(),\n\t\tancestorMasks: [],\n\t\toptions: {\n\t\t\tcaptureArea: options?.captureArea ?? element.getBoundingClientRect(),\n\t\t\tkeepLinks: options?.keepLinks !== false,\n\t\t},\n\t})\n\n\tconst bounds = options?.captureArea ?? element.getBoundingClientRect()\n\tsvgElement.setAttribute('width', bounds.width.toString())\n\tsvgElement.setAttribute('height', bounds.height.toString())\n\tsvgElement.setAttribute('viewBox', `${bounds.x} ${bounds.y} ${bounds.width} ${bounds.height}`)\n\n\treturn svgDocument\n}\n\nexport { inlineResources } from './inline'\n"]}